{"ast":null,"code":"var _jsxFileName = \"/home/tania/Desktop/hfso2021/part1/courseinfo/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7\n    }, {\n      name: 'State of a component',\n      exercises: 14\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // Header\n\n\n_c = App;\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}; // Content\n\n\n_c2 = Header;\n\nconst Content = props => {\n  console.log('Content props', props);\n  const partsName1 = props.parts[0].name;\n  const partsExercises1 = props.parts[0].exercises;\n  const partsName2 = props.parts[1].name;\n  const partsExercises2 = props.parts[1].exercises;\n  const partsName3 = props.parts[2].name;\n  const partsExercises3 = props.parts[2].exercises;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Part, {\n      part: partsName1,\n      exercises: partsExercises1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: partsName2,\n      exercises: partsExercises2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: partsName3,\n      exercises: partsExercises3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}; // Part\n\n\n_c3 = Content;\n\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.part, \" \", props.exercises]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}; // Total\n\n\n_c4 = Part;\n\nconst Total = props => {\n  const partsArray = props.parts;\n  const total = partsArray.reduce(function (tot, partsArray) {\n    return tot + partsArray.exercises;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of exercises \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Total;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Part\");\n$RefreshReg$(_c5, \"Total\");","map":{"version":3,"sources":["/home/tania/Desktop/hfso2021/part1/courseinfo/src/App.js"],"names":["React","App","course","name","parts","exercises","Header","props","Content","console","log","partsName1","partsExercises1","partsName2","partsExercises2","partsName3","partsExercises3","Part","part","Total","partsArray","total","reduce","tot"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst App = () => {\n\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n  return (\n    <>\n      <Header course={course.name} />\n      <Content parts={course.parts} />\n      <Total parts={course.parts} />\n    </>\n  )\n}\n\n// Header\nconst Header = (props) => {\n  return (\n    <div>\n      <h1>{props.course}</h1>\n    </div>\n  );\n}\n\n// Content\nconst Content = (props) => {\n\n  console.log('Content props', props)\n\n  const partsName1 = props.parts[0].name \n  const partsExercises1 = props.parts[0].exercises   \n\n  const partsName2 = props.parts[1].name \n  const partsExercises2 = props.parts[1].exercises   \n\n  const partsName3 = props.parts[2].name \n  const partsExercises3 = props.parts[2].exercises   \n\n  return (\n    <div>\n      <Part part={partsName1} exercises={partsExercises1} />\n      <Part part={partsName2} exercises={partsExercises2} />\n      <Part part={partsName3} exercises={partsExercises3} />\n  </div>\n  );\n}\n\n// Part\nconst Part = (props) => {\n\n  return (\n    <div>\n      <p>{props.part} {props.exercises}</p>\n    </div>\n\n  );\n}\n\n// Total\nconst Total = (props) => {\n\n  const partsArray = props.parts\n\n  const total = partsArray.reduce(function(tot, partsArray) {\n    return tot + partsArray.exercises\n  }, 0);\n\n  return (\n    <div>\n      <p>Number of exercises {total}</p>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}