{"version":3,"sources":["services/phoneNumbers.js","components/Header.js","components/Button.js","components/Input.js","components/Form.js","components/Entry.js","components/Entries.js","components/Searchbar.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","numberService","getAll","axios","get","then","response","data","getOne","name","params","create","newPerson","post","update","personId","put","deleteOne","delete","status","Header","headerName","Button","buttonType","buttonText","buttonClassName","className","type","Input","inputName","inputValue","inputOnchange","style","marginBottom","value","onChange","Form","onsubmit","nameInputValue","handleNameChange","numberInputValue","handleNumberChange","onSubmit","Entry","number","onClickDelete","id","onClick","Entries","entriesToShow","length","listStyleType","padding","map","person","Searchbar","searchbarText","searchbarInputValue","searchbarInputOnchange","Notification","message","App","useState","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","showAll","setShowAll","people","setPeople","isLoading","setLoading","notification","setNotification","useEffect","allNumbers","filter","toLowerCase","includes","event","target","preventDefault","objName1","objName2","trim","alreadyExists","window","confirm","toUpperCase","personToUpdate","find","idToUpdate","updatedPerson","updated","catch","error","setTimeout","location","reload","updateNotification","newEntry","returnedNumber","concat","console","log","addNotification","alert","personName","parentElement","getAttribute","deleteNotification","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05199fe3.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = 'https://serene-shore-95955.herokuapp.com/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst getOne = (name) => {\n    const request = axios.get(baseUrl, { params: { name: name}})\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst deleteOne = (personId) => {\n    const request = axios.delete(`${baseUrl}/${personId}`)\n    return request.then(response => response.status)\n}   \n\nconst update = (personId, newPerson) => {\n   const request = axios.put(`${baseUrl}/${personId}`, newPerson)\n   return request.then(response => response.data)\n}\n\nconst numberService = {\n    getAll,\n    getOne,\n    create,\n    update,\n    deleteOne\n};\n\nexport default numberService;","import React from 'react'\n\nconst Header = ({headerName}) => {\n    return (\n        <h2>{headerName}</h2>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Button = ({ buttonType, buttonText, buttonClassName }) => {\n    return (\n        <div>\n          <button className={buttonClassName} type={buttonType}>{buttonText}</button>\n        </div>\n    )\n}\n\nexport default Button","import React from 'react'\n\nconst Input = ({inputName, inputValue, inputOnchange}) => {\n\n    return (\n        <div>\n            {inputName}: <input \n              style={{marginBottom: '5px'}}\n              value={inputValue} \n              onChange={inputOnchange}\n          />\n        </div>\n    )\n}\n\nexport default Input","import React from 'react'\nimport Button from './Button'\nimport Input from './Input'\n\nconst Form = ({ onsubmit, \n                nameInputValue, \n                handleNameChange, \n                numberInputValue, \n                handleNumberChange, \n                buttonType, \n                buttonText,\n                buttonClassName }) => {\n    return (\n        <form onSubmit={onsubmit}>\n          <Input inputName='name' inputValue={nameInputValue} inputOnchange={handleNameChange}/>\n          <Input inputName='number' inputValue={numberInputValue} inputOnchange={handleNumberChange}/>\n          <Button type={buttonType} buttonText={buttonText} buttonClassName={buttonClassName}/>\n      </form>\n    )\n}\n\nexport default Form","import React from  'react'\n\nconst Entry = ({name, number, onClickDelete, id, buttonClassName}) => {\n\n    const entryStyle = {\n        marginBottom: '5px'\n    }\n\n    return (\n        <li id={id} name={name} style={entryStyle}>{name} {number} <button className={buttonClassName} onClick={onClickDelete}>delete</button></li>\n    )\n}\n\nexport default Entry","import React from 'react'\nimport Entry from './Entry'\n\nconst Entries = ({ entriesToShow, onClickDelete, buttonClassName }) => {\n\n    if (entriesToShow.length === 0) {\n        return (\n            <p>No matching contacts.</p>\n        );\n    }\n\n    /*\n    const allPeople = people.map(person => \n        <Entry key={person.id} name={person.name} number={person.number}/>\n    );\n\n    return (\n        <div>\n            <ul style={{listStyleType: 'none', padding: '0'}}>\n                {allPeople}\n            </ul>\n        </div>\n    )\n    */\n   \n    return (\n        <div>\n        <ul style={{listStyleType: 'none', padding: '0'}}>\n            {entriesToShow.map(person => \n                <Entry key={person.id} id={person.id} name={person.name} number={person.number} onClickDelete={onClickDelete} buttonClassName={buttonClassName}/>\n            )}\n        </ul>\n    </div>\n    )\n}\n\nexport default Entries","import React from 'react'\nimport Input from './Input'\n\nconst Searchbar = ({searchbarText, searchbarInputValue, searchbarInputOnchange}) => {\n    return (\n        <div>\n            <Input inputName={searchbarText} inputValue={searchbarInputValue} inputOnchange={searchbarInputOnchange} />\n        </div>\n    )\n}\n\nexport default Searchbar","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={type}>\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport numberService from './services/phoneNumbers'\nimport Header from './components/Header'\nimport Form from './components/Form'\nimport Entries from './components/Entries'\nimport Searchbar from './components/Searchbar'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n\n  const mainHeaderName = 'Phonebook'\n  const numbersHeader = 'Numbers'\n  const addNewEntryHeader = 'Add new'\n  const searchbarText = 'Search any name'\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [ people, setPeople ] = useState([]) \n  const [ isLoading, setLoading ] = useState(true)\n  const [ notification, setNotification ] = useState({ message: null, type: null })\n\n  useEffect(() => {\n    numberService\n      .getAll()\n      .then(allNumbers => {\n        setPeople(allNumbers)\n        setLoading(false)\n      })\n  }, [])\n\n  // EVENT HANDLERS ------------------------------------------------------------------------\n\n  const entriesToShow = showAll\n  ? people\n  : people.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()))\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n\n  const handleSearchChange = (event) => {\n    //console.log(event.target.value)\n    if (event.target.value !== '') { setShowAll(false) }\n    setNewSearch(event.target.value)\n  }\n\n  const nameIsEqual = (objName1, objName2) => {\n\n    return objName1.toLowerCase() === objName2.toLowerCase()\n  }\n\n  const alreadyExists = (newName) => {\n    for (let person of people) {\n      if (nameIsEqual(person.name.trim(), newName.trim())) {\n        return true;\n      }   \n    }\n  }\n\n  const onSubmitAddEntry = (event) => {\n\n    event.preventDefault()\n\n    if (alreadyExists(newName) && newNumber !== '') { \n\n      const confirmUpdate = window.confirm(`${newName.toUpperCase().trim()} is already in phonebook. Replace number with new one?`)\n      if (confirmUpdate) {\n\n        const personToUpdate = people.find(person => person.name.toLowerCase() === newName.toLowerCase())\n        const idToUpdate = personToUpdate.id\n\n        const updatedPerson = { ...personToUpdate, number: newNumber }\n      \n        numberService\n          .update(idToUpdate, updatedPerson)\n          .then(updated => {\n            setPeople(people.map(person => person.id !== idToUpdate ? person : updated))})\n          .catch(error => {\n            setNotification({ message: `Could't update this number! It has probably been deleted.`, type: 'delete'})\n            setTimeout(() => {\n              setNotification({ message: null,  type: null })\n              window.location.reload()\n            }, 2000)\n          })\n\n        const updateNotification = { message: `${newName.toUpperCase()}'s number updated!`, type: 'update' }\n        setNotification(updateNotification)\n\n        setTimeout(() => {\n          setNotification({ message: null,  type: null })\n          window.location.reload()\n        }, 1500)\n\n        return\n\n      } else { \n          setNewName('')\n          setNewNumber('')\n          return \n        }\n    }\n    else if (newName === '' || newNumber === '') { \n      alert(`Cannot add an incomplete entry. Please provide both a name and a number`)\n      return\n    }\n    else {\n\n      const newEntry = {\n        id: people.length + 1,\n        name: newName,\n        number: newNumber\n      }\n     \n      numberService\n        .create(newEntry)\n        .then(returnedNumber => {\n          setPeople(people.concat(returnedNumber));\n          setNewName('')\n          setNewNumber('')})\n        .catch(error => {\n          console.log(error);\n        })\n\n      const addNotification = { message: `${newEntry.name.toUpperCase()} added to phonebook!`, type: 'add' }\n      setNotification(addNotification)\n\n      setTimeout(() => {\n        setNotification({ message: null,  type: null })\n      }, 2500)\n    }\n  } \n\n  const onClickDelete = (event) => {\n    \n    const personName = event.target.parentElement.getAttribute(\"name\");\n\n    const confirmDelete = window.confirm(`Delete ${personName.toUpperCase()} from phonebook?`)\n    \n    if (confirmDelete) {\n\n      const personId = event.target.parentElement.getAttribute(\"id\");\n      numberService\n        .deleteOne(personId)\n        .catch(error => console.log('Something went wrong DELETING item: ', error))\n\n      const deleteNotification = { message: `${personName.toUpperCase()} deleted from phonebook!`, type: 'delete' }\n      setNotification(deleteNotification)\n\n      setTimeout(() => {\n        setNotification({ message: null,  type: null })\n      }, 1500)\n\n      setPeople(people.filter(person => person.id !== +personId))\n    }\n  }\n\n  // RENDERING -------------------------------------------------------------------\n\n  if (isLoading) { return (<div>Loading...</div>)}\n\n  return (\n    <div className=\"app\">\n      <Notification message={notification.message} type={notification.type}/>\n      <Header headerName={mainHeaderName}/>\n      <Searchbar searchbarText={searchbarText} searchbarInputValue={newSearch} searchbarInputOnchange={handleSearchChange}/>\n      <Header headerName={addNewEntryHeader}/>\n      <Form onsubmit={onSubmitAddEntry} \n            nameInputValue={newName} \n            handleNameChange={handleNameChange} \n            numberInputValue={newNumber} \n            handleNumberChange={handleNumberChange}  \n            buttonType='submit' \n            buttonText='add' \n            buttonClassName='addButton'/>\n      <Header headerName={numbersHeader}/>\n      <Entries entriesToShow={entriesToShow} onClickDelete={onClickDelete} buttonClassName='deleteButton' />\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}